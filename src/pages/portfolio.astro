---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION } from '../consts';
import { projects, getFeaturedProjects, categories } from '../data/projects';

const featuredProjects = getFeaturedProjects();
const allProjects = projects.filter(project => !project.featured);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="Portfolio - My Projects" description="Showcase of my development projects, GitHub repositories, and technical work." />
		<style>
			main {
				width: 960px;
				max-width: calc(100% - 2rem);
				margin: auto;
				padding: 3rem 1rem;
			}
			
			.portfolio-header {
				text-align: center;
				margin-bottom: 2rem;
			}
			
			.portfolio-header h1 {
				margin: 0 0 0.5rem 0;
				color: var(--text-primary);
				font-weight: var(--font-weight-bold);
				letter-spacing: var(--tracking-tight);
			}
			
			.portfolio-header p {
				margin: 0;
				color: var(--text-secondary);
				font-size: var(--text-sm);
			}
			
			.section {
				margin-bottom: 4rem;
			}
			
			.section-title {
				font-size: var(--text-3xl);
				margin: 0 0 2rem 0;
				color: var(--text-primary);
				text-align: center;
				font-weight: var(--font-weight-bold);
			}
			
			.filter-buttons {
				display: flex;
				flex-wrap: wrap;
				justify-content: center;
				gap: 0.5rem;
				margin-bottom: 2rem;
			}
			
			.filter-btn {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				background: rgb(var(--gray-light));
				border: 1px solid rgb(var(--gray));
				color: rgb(var(--black));
				padding: 0.75rem 1.25rem;
				border-radius: 2rem;
				cursor: pointer;
				transition: all 0.2s ease;
				font-size: 0.9rem;
				font-weight: 500;
			}
			
			.filter-btn:hover {
				background: var(--accent);
				color: white;
				border-color: var(--accent);
				transform: translateY(-2px);
				box-shadow: var(--shadow-md);
			}
			
			.filter-btn:focus {
				outline: none;
				box-shadow: 0 0 0 3px oklch(from var(--accent) l c h / 0.3);
			}
			
			.filter-btn.active {
				background: var(--accent-dark);
				color: white;
				border-color: var(--accent-dark);
			}
			
			.projects-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
				gap: 2rem;
				margin-top: 0;
				align-items: stretch;
			}
			
			.featured-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
				gap: 2rem;
				margin-top: 2rem;
			}
			
			.project-card {
				background: var(--color-bg-primary);
				border-radius: 12px;
				overflow: hidden;
				box-shadow: var(--shadow-sm);
				transition: all 0.3s ease;
				border: 1px solid var(--color-border-secondary);
				display: flex;
				flex-direction: column;
				height: 100%;
			}
			
			.project-card:hover {
				transform: translateY(-4px);
				box-shadow: var(--shadow-xl);
			}
			
			.project-card.featured {
				border: 2px solid rgb(var(--accent));
				background: linear-gradient(135deg, rgba(var(--accent), 0.02), rgba(var(--accent), 0.05));
			}
			
			.project-image {
				width: 100%;
				height: 200px;
				background: linear-gradient(135deg, rgb(var(--accent-light, var(--accent))), rgb(var(--accent)));
				display: flex;
				align-items: center;
				justify-content: center;
				color: white;
				font-size: 3rem;
				position: relative;
			}
			
			.project-image.has-image {
				background: none;
			}
			
			.project-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
			}
			
			.featured-badge {
				position: absolute;
				top: 1rem;
				right: 1rem;
				background: var(--color-bg-secondary);
				color: var(--color-accent);
				padding: 0.25rem 0.75rem;
				border-radius: 1rem;
				font-size: 0.8rem;
				font-weight: 600;
			}
			
			.project-content {
				padding: 1.5rem;
				display: flex;
				flex-direction: column;
				flex: 1 1 auto;
			}
			
			.project-header {
				display: flex;
				justify-content: space-between;
				align-items: flex-start;
				margin-bottom: 1rem;
			}
			
			.project-title {
				font-size: 1.3rem;
				font-weight: 600;
				margin: 0;
				color: rgb(var(--black));
				line-height: 1.3;
			}
			
			.project-status {
				font-size: 0.8rem;
				padding: 0.25rem 0.75rem;
				border-radius: 1rem;
				font-weight: 500;
				text-transform: capitalize;
			}
			
			.status-completed {
				background: var(--color-green-100);
				color: var(--color-green-700);
			}
			
			.status-in-progress {
				background: var(--color-amber-100);
				color: var(--color-amber-800);
			}
			
			.status-archived {
				background: var(--color-zinc-200);
				color: var(--color-zinc-600);
			}
			
			.project-description {
				color: rgb(var(--gray-dark));
				line-height: 1.6;
				margin-bottom: 1rem;
				white-space: pre-line;
			}
			
			.project-tech {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				margin-bottom: 1.5rem;
			}
			
			.tech-tag {
				background: rgb(var(--gray-light));
				color: rgb(var(--gray-dark));
				padding: 0.25rem 0.75rem;
				border-radius: 1rem;
				font-size: 0.8rem;
				font-weight: 500;
			}
			
			.project-links {
				display: flex;
				gap: 1rem;
				margin-top: auto;
			}
			
			.project-link {
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				padding: 0.5rem 1rem;
				border-radius: 0.5rem;
				text-decoration: none;
				font-weight: 500;
				transition: all 0.2s ease;
				font-size: 0.9rem;
			}
			
			.link-github {
				background: rgb(var(--black));
				color: white;
			}
			
			.link-github:hover {
				background: rgb(var(--gray-dark));
			}
			
			.link-live {
				background: rgb(var(--accent));
				color: white;
			}
			
			.link-live:hover {
				opacity: 0.8;
			}
			
			.stats-section {
				background: rgb(var(--gray-light));
				padding: 2rem;
				border-radius: 12px;
				margin-bottom: 3rem;
			}
			
			.stats-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
				gap: 1.5rem;
			}
			
			.stat-item {
				text-align: center;
			}
			
			.stat-number {
				font-size: 2.5rem;
				font-weight: 700;
				color: rgb(var(--accent));
				margin: 0;
			}
			
			.stat-label {
				color: rgb(var(--gray-dark));
				margin: 0.5rem 0 0 0;
				font-weight: 500;
			}
			
			@media (max-width: 768px) {
				main {
					padding: 2rem 1rem;
				}
				.portfolio-header h1 {
					font-size: 2rem;
				}
				.projects-grid,
				.featured-grid {
					grid-template-columns: 1fr;
				}
				.filter-buttons {
					flex-direction: column;
					align-items: center;
				}
				.project-links {
					flex-direction: column;
				}
			}
			
			/* Animation classes for filtering */
			.project-card.hidden {
				display: none;
			}
			
			.project-card.fade-in {
				animation: fadeIn 0.3s ease-in-out;
			}
			
			@keyframes fadeIn {
				from {
					opacity: 0;
					transform: translateY(20px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}
			
			.project-bottom {
				margin-top: auto;
				display: flex;
				flex-direction: column;
				gap: 1rem;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="portfolio-header">
				<h1>Portfolio</h1>
				<p class="project-count">
					{allProjects.length} projects available
				</p>
			</div>

			<!-- Statistics Section -->
			<div class="stats-section">
				<div class="stats-grid">
					<div class="stat-item">
						<h3 class="stat-number">{allProjects.length}</h3>
						<p class="stat-label">Total Projects</p>
					</div>
					<div class="stat-item">
						<h3 class="stat-number">{featuredProjects.length}</h3>
						<p class="stat-label">Featured Projects</p>
					</div>
					<div class="stat-item">
						<h3 class="stat-number">{allProjects.filter(p => p.status === 'completed').length}</h3>
						<p class="stat-label">Completed</p>
					</div>
					<div class="stat-item">
						<h3 class="stat-number">{allProjects.filter(p => p.status === 'in-progress').length}</h3>
						<p class="stat-label">In Progress</p>
					</div>
				</div>
			</div>

			<!-- Featured Projects -->
			{featuredProjects.length > 0 && (
				<section class="section">
					<h2 class="section-title">‚≠ê Featured Projects</h2>
					<div class="featured-grid">
						{featuredProjects.map((project) => (
							<div class="project-card featured">
								<div class="project-image">
									{project.imageUrl ? (
										<img src={project.imageUrl} alt={project.title} />
									) : (
										<span>üöÄ</span>
									)}
									<div class="featured-badge">Featured</div>
								</div>
								<div class="project-content">
									<div class="project-header">
										<h3 class="project-title">{project.title}</h3>
										<span class={`project-status status-${project.status}`}>
											{project.status}
										</span>
									</div>
									<p class="project-description">
										{project.description}
									</p>
									{project.longDescription && (
										<p class="project-description">
											{project.longDescription}
										</p>
									)}
									<div class="project-bottom">
										<div class="project-tech">
											{project.technologies.map((tech) => (
												<span class="tech-tag">{tech}</span>
											))}
										</div>
										<div class="project-links">
											{project.githubUrl && (
												<a href={project.githubUrl} target="_blank" rel="noopener noreferrer" class="project-link link-github">
													<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
														<path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
													</svg>
													GitHub
												</a>
											)}
											{project.liveUrl && (
												<a href={project.liveUrl} target="_blank" rel="noopener noreferrer" class="project-link link-live">
													<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
														<path d="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z"/>
													</svg>
													Live Demo
												</a>
											)}
										</div>
									</div>
								</div>
							</div>
						))}
					</div>
				</section>
			)}

			<!-- All Projects -->
			<section class="section">
				<h2 class="section-title">All Projects</h2>
				
				<!-- Filter Buttons -->
				<div class="filter-buttons">
					{categories.map((category) => (
						<button 
							class={`filter-btn ${category.key === 'all' ? 'active' : ''}`} 
							data-filter={category.key}
						>
							{category.label}
						</button>
					))}
				</div>

				<!-- Projects Grid -->
				<div class="projects-grid" id="projects-grid">
					{allProjects.map((project) => (
						<div class="project-card" data-category={project.category}>
							<div class="project-image">
								{project.imageUrl ? (
									<img src={project.imageUrl} alt={project.title} />
								) : (
									<span>üì¶</span>
								)}
							</div>
							<div class="project-content">
								<div class="project-header">
									<h3 class="project-title">{project.title}</h3>
									<span class={`project-status status-${project.status}`}>
										{project.status}
									</span>
								</div>
								<p class="project-description">{project.description}</p>
								{project.longDescription && (
									<p class="project-description">{project.longDescription}</p>
								)}
								<div class="project-tech">
									{project.technologies.map((tech) => (
										<span class="tech-tag">{tech}</span>
									))}
								</div>
								<div class="project-links">
									{project.githubUrl && (
										<a href={project.githubUrl} target="_blank" rel="noopener noreferrer" class="project-link link-github">
											<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
												<path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
											</svg>
											GitHub
										</a>
									)}
									{project.liveUrl && (
										<a href={project.liveUrl} target="_blank" rel="noopener noreferrer" class="project-link link-live">
											<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
												<path d="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z"/>
											</svg>
											Live Demo
										</a>
									)}
								</div>
							</div>
						</div>
					))}
				</div>
			</section>
		</main>
		<Footer />

		<script>
			// Portfolio filtering functionality
			class PortfolioFilter {
				constructor() {
					this.filterButtons = document.querySelectorAll('.filter-btn');
					this.projectCards = document.querySelectorAll('.project-card[data-category]');
					this.init();
				}

				init() {
					this.filterButtons.forEach(button => {
						button.addEventListener('click', (e) => {
							const filter = e.target.getAttribute('data-filter');
							this.filterProjects(filter);
							this.updateActiveButton(e.target);
						});
					});
				}

				filterProjects(filter) {
					this.projectCards.forEach(card => {
						const category = card.getAttribute('data-category');
						
						if (filter === 'all' || category === filter) {
							card.classList.remove('hidden');
							card.classList.add('fade-in');
						} else {
							card.classList.add('hidden');
							card.classList.remove('fade-in');
						}
					});
				}

				updateActiveButton(activeButton) {
					this.filterButtons.forEach(button => {
						button.classList.remove('active');
					});
					activeButton.classList.add('active');
				}
			}

			// Initialize portfolio filter when DOM is ready
			document.addEventListener('DOMContentLoaded', () => {
				new PortfolioFilter();
			});
		</script>
	</body>
</html>
